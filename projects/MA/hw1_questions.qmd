---
title: "A Replication of Karlan and List (2007)"
author: "Joshua Chen"
jupyter: python3
date: today
image: ab.png
callout-appearance: minimal 
execute:
    echo: false
# this hides the blue "i" icon on .callout-notes
---


## Introduction

Dean Karlan at Yale and John List at the University of Chicago conducted a field experiment to test the effectiveness of different fundraising letters. They sent out 50,000 fundraising letters to potential donors, randomly assigning each letter to one of three treatments: a standard letter, a matching grant letter, or a challenge grant letter. They published the results of this experiment in the _American Economic Review_ in 2007. The article and supporting data are available from the [AEA website](https://www.aeaweb.org/articles?id=10.1257/aer.97.5.1774) and from Innovations for Poverty Action as part of [Harvard's Dataverse](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/27853&version=4.2).

In their experiment, Dean Karlan and John A. List conducted a large-scale natural field experiment to explore the impact of price on charitable giving. They used direct mail solicitations sent to over 50,000 previous donors of a nonprofit organization to test the effectiveness of matching grants on charitable donations. The experiment randomly assigned individuals to either a control group or a matching grant treatment group. Within the matching grant treatment group, individuals were further randomly assigned to different matching grant rates, matching grant maximum amounts, and suggested donation amounts.

The study found that announcing the availability of match money significantly increased both the revenue per solicitation (by 19%) and the probability of making a donation (by 22%). However, larger matching ratios ($3:$1 and $2:$1) did not have an additional impact compared to a smaller matching ratio ($1:$1). The elasticity estimate of the price change from the baseline to the treatment groups was -0.30, which is near the lower range of the elasticity of giving with respect to transitory price changes reported in previous studies.

Interestingly, the effectiveness of the matching gift varied by the political environment of the donors. In states that voted for George W. Bush in the 2004 presidential election ("red" states), the match increased the revenue per solicitation by 55%, while in "blue" states, there was little effect observed.

This project seeks to replicate their results.


## Data

### Description

```{python, echo=false}
import pandas as pd
df = pd.read_stata('karlan_list_2007.dta')
```
```{python}
# Your Python code here
print(df.shape)
```
There are 50083 rows and 51 columns in this dataset.
```{python}
print(df.describe(include = 'all'))
```
The above shows a general distribution for each variable.
```{python}
print(df.isna().sum())
```
This shows the number of missing values in each column.

:::: {.callout-note collapse="true"}

### Variable Definitions

| Variable             | Description                                                         |
|----------------------|---------------------------------------------------------------------|
| `treatment`          | Treatment                                                           |
| `control`            | Control                                                             |
| `ratio`              | Match ratio                                                         |
| `ratio2`             | 2:1 match ratio                                                     |
| `ratio3`             | 3:1 match ratio                                                     |
| `size`               | Match threshold                                                     |
| `size25`             | \$25,000 match threshold                                            |
| `size50`             | \$50,000 match threshold                                            |
| `size100`            | \$100,000 match threshold                                           |
| `sizeno`             | Unstated match threshold                                            |
| `ask`                | Suggested donation amount                                           |
| `askd1`              | Suggested donation was highest previous contribution                |
| `askd2`              | Suggested donation was 1.25 x highest previous contribution         |
| `askd3`              | Suggested donation was 1.50 x highest previous contribution         |
| `ask1`               | Highest previous contribution (for suggestion)                      |
| `ask2`               | 1.25 x highest previous contribution (for suggestion)               |
| `ask3`               | 1.50 x highest previous contribution (for suggestion)               |
| `amount`             | Dollars given                                                       |
| `gave`               | Gave anything                                                       |
| `amountchange`       | Change in amount given                                              |
| `hpa`                | Highest previous contribution                                       |
| `ltmedmra`           | Small prior donor: last gift was less than median \$35              |
| `freq`               | Number of prior donations                                           |
| `years`              | Number of years since initial donation                              |
| `year5`              | At least 5 years since initial donation                             |
| `mrm2`               | Number of months since last donation                                |
| `dormant`            | Already donated in 2005                                             |
| `female`             | Female                                                              |
| `couple`             | Couple                                                              |
| `state50one`         | State tag: 1 for one observation of each of 50 states; 0 otherwise  |
| `nonlit`             | Nonlitigation                                                       |
| `cases`              | Court cases from state in 2004-5 in which organization was involved |
| `statecnt`           | Percent of sample from state                                        |
| `stateresponse`      | Proportion of sample from the state who gave                        |
| `stateresponset`     | Proportion of treated sample from the state who gave                |
| `stateresponsec`     | Proportion of control sample from the state who gave                |
| `stateresponsetminc` | stateresponset - stateresponsec                                     |
| `perbush`            | State vote share for Bush                                           |
| `close25`            | State vote share for Bush between 47.5% and 52.5%                   |
| `red0`               | Red state                                                           |
| `blue0`              | Blue state                                                          |
| `redcty`             | Red county                                                          |
| `bluecty`            | Blue county                                                         |
| `pwhite`             | Proportion white within zip code                                    |
| `pblack`             | Proportion black within zip code                                    |
| `page18_39`          | Proportion age 18-39 within zip code                                |
| `ave_hh_sz`          | Average household size within zip code                              |
| `median_hhincome`    | Median household income within zip code                             |
| `powner`             | Proportion house owner within zip code                              |
| `psch_atlstba`       | Proportion who finished college within zip code                     |
| `pop_propurban`      | Proportion of population urban within zip code                      |

::::


### Balance Test 

As an ad hoc test of the randomization mechanism, I provide a series of tests that compare aspects of the treatment and control groups to assess whether they are statistically significantly different from one another.

#### Testing mrm2 - Months since last donation.
```{python, echo=false}
from scipy import stats
import statsmodels.api as sm
import warnings
warnings.filterwarnings('ignore')
treatment = df[df['treatment']== 1]
control = df[df['control'] == 1]
treatment.dropna(subset = ['mrm2'], inplace = True)
control.dropna(subset = ['mrm2'], inplace = True)
```
```{python}
t_stat, p_value = stats.ttest_ind(treatment['mrm2'], control['mrm2'], equal_var=False)
print(f"T-test results: t-statistic = {t_stat}, p-value = {p_value}")
```
```{python, echo = false}
# Perform a linear regression
df2 = df.copy()
df2.dropna(subset = ['mrm2'], inplace = True)
df2['intercept'] = 1
model = sm.OLS(df2['mrm2'], df2[['intercept', 'treatment']])
results = model.fit()
```
```{python}
print("Linear regression results:")
print(results.summary())
print(treatment['mrm2'].mean())
print(control['mrm2'].mean())
```
Using both the t-test and linear regerssion, the p-value for the difference in mens between treatment and control groups for mrm2 is 0.905. This means that we fail to reject the null hypothesis that the treatment and control groups are statistically significantly different at the 95% confidence level, further suggesting that the randomization was successful.

```{python}
print("mean for mrm2 control:" ,control['mrm2'].mean())
print("mean for mrm2 control:" ,treatment['mrm2'].mean())
```
The above values matches the ones shown in Table 1.

#### Testing hpa - highest previous contribution
```{python, echo=false}
from scipy import stats
import statsmodels.api as sm
treatment = df[df['treatment']== 1]
control = df[df['control'] == 1]
treatment.dropna(subset = ['hpa'], inplace = True)
control.dropna(subset = ['hpa'], inplace = True)
```
```{python}
t_stat, p_value = stats.ttest_ind(treatment['hpa'], control['hpa'], equal_var=False)
print(f"T-test results: t-statistic = {t_stat}, p-value = {p_value}")
```
```{python, echo=false}
# Perform a linear regression
df2 = df.copy()
df2.dropna(subset = ['hpa'], inplace = True)
df2['intercept'] = 1
model = sm.OLS(df2['hpa'], df2[['intercept', 'treatment']])
results = model.fit()
```
```{python}
print("Linear regression results:")
print(results.summary())
print(treatment['hpa'].mean())
print(control['hpa'].mean())
```
Using both the t-test and linear regerssion, the p-value for the difference in mens between treatment and control groups for hpa are both above 0.94. This means that we fail to reject the null hypothesis that the treatment and control groups are statistically significantly different at the 95% confidence level, further suggesting that the randomization was successful.

```{python}
print("mean for mrm2 control:" ,control['hpa'].mean())
print("mean for mrm2 control:" ,treatment['hpa'].mean())
```
The above values matches the ones shown in Table 1.
![Table1](table1.png)
Note: hpa is highest previous contribution and mrm2 is number of months since last donation.

## Experimental Results

### Charitable Contribution Made

First, I analyze whether matched donations lead to an increased response rate of making a donation. 

```{python, echo = false}
import matplotlib.pyplot as plt
proportions = df.groupby('treatment')['gave'].mean().reset_index()
```
```{python}
# Create a bar plot
plt.bar(proportions['treatment'], proportions['gave'], tick_label=['Control', 'Treatment'])
plt.ylabel('Proportion of People Who Donated')
plt.title('Proportion of Donations by Group')
plt.show()
```
As seen in the plot above, the control group appears to have a lower proportion compared to the treatment group.

```{python, echo = false}
treatment_donated = df[df['treatment'] == 1]['gave']
control_donated = df[df['treatment'] == 0]['gave']
```
```{python}
t_stat, p_value = stats.ttest_ind(treatment_donated, control_donated)
print(f"T-test results: t-statistic = {t_stat}, p-value = {p_value}")

df['intercept'] = 1
model = sm.OLS(df['gave'], df[['intercept', 'treatment']])
results = model.fit()
print("Linear regression results:")
print(results.summary())
```
The t-test and linear regression both show a p value of 0.002. This suggest that the difference in response rates between the treatment and control groups is statistically significant, meaning that the treatment group does indeed increase the likelihood of making a charitable donation compared to the control group. This finding is also consistent with the results reported in Table 2a.

```{python}
df['intercept'] = 1

# Define the model and fit it
probit_model = sm.Probit(df['gave'], df[['intercept', 'treatment']])
probit_results = probit_model.fit()
coef = probit_results.params['treatment']
z_stat = probit_results.tvalues['treatment']
p_value = probit_results.pvalues['treatment']

print("coefficient", coef)
print("z-statistic: ", z_stat)
print("p-value: ", p_value)
# Print the summary of the regression results
print(probit_results.summary())
```

The probit regression also confirms that the coefficient on the treatment varialbe is statistically significant (p-value of 0.0019). This is consistent with the findings on Table 3 column 1, suggesting that people in the treatemnt group does have increased likelihood of making a charitable donation

### Differences between Match Rates

Next, I assess the effectiveness of different sizes of matched donations on the response rate.

```{python}
match21 = df[df['ratio'] == 2]['gave']
match31 = df[df['ratio']== 3]['gave']
match11 = df[df['ratio'] == 1]['gave']

t_stat, p_value = stats.ttest_ind(match31, match21)
print("1:1 and 2:1 match ratios" + f"T-test results: t-statistic = {t_stat}, p-value = {p_value}")
t_stat, p_value = stats.ttest_ind(match11, match31)
print("1:1 and 3:1 match ratios" + f"T-test results: t-statistic = {t_stat}, p-value = {p_value}")
t_stat, p_value = stats.ttest_ind(match11, match21)
print("1:1 and 2:1 match ratios" +f"T-test results: t-statistic = {t_stat}, p-value = {p_value}")
```
The t-tests and the p-values show that the difference in response rate betwen 1:1 and 2:1, 2:1 and 3:1, 1:1 and 3:1 are all not statistically significant at the 95% confidence level. This means that the match ratios does not increase the likelihood of someone making a charitable donation. This is consistent with the authors comments on page 8, which suggested that the figures do not show a clear pattern of increasing repsonse rates as match ratios increase.

```{python, echo = false}
df['ratio1'] = (df['ratio'] ==1).astype(int).astype('category')
df['ratio2'] = df['ratio2'].astype('category')
df['ratio3'] = df['ratio3'].astype('category')

model = sm.OLS(df['gave'], df[['intercept', 'ratio1', 'ratio2', 'ratio3']])
model_results = model.fit()
```
```{python}
print(model_results.summary())
```
The regression results indicate that the coefficients for the 2:1 and 3:1 match ratios are statistically significant at the 95% confidence interval, suggesting that these match sizes significantly increase the likelihood of donating compared to the baseline category, which is the control group. However, the coefficient for the 1:1 match ratio is not statistically significant, indicating that a 1:1 match does not significantly enhance the likelihood of donating when compared to no matching. Therefore, while the 2:1 and 3:1 matches are effective in increasing donation rates, the 1:1 match does not show a significant effect relative to having no match at all.
```{python}
print("difference between 3:1 and 2:1 : " + str(match31.mean() - match21.mean()))
print("difference between 1:1 and 2:1 : " + str(match11.mean() - match21.mean()))
print("difference between 3:1 and 1:1 : " + str(match31.mean() - match11.mean()))
```
The above is calcualted directly from data
```{python}
print("difference between 3:1 and 2:1 : " + str(model_results.params['ratio3'] - model_results.params['ratio2']))
print("difference between 1:1 and 2:1 : " + str(model_results.params['ratio1'] - model_results.params['ratio2']))
print("difference between 3:1 and 1:1 : " + str(model_results.params['ratio3'] - model_results.params['ratio1']))
```
The above is calculated using the coefficients generated from the regression above. 

Both resulted in the same set of numbers.

### Size of Charitable Contribution

In this subsection, I analyze the effect of the size of matched donation on the size of the charitable contribution.

```{python, echo = false}
treatment_amount = df[df['treatment'] == 1]['amount']
control_amount = df[df['control'] == 1]['amount']

diff = treatment_amount.mean() - control_amount.mean()

t_stat, p_value = stats.ttest_ind(treatment_amount, control_amount)

print("difference in donation amounts between control and treatment: ", diff)
print("t-statistic: ", t_stat)
print("p-value: ", p_value)
```

The p-value suggest that the difference in donation amount between the treatment and control group is not statistically significant at the 95% confidence level. This suggests that the treatment group does not appear to have a higher donation amount.

```{python, echo = false}
treatment_amount = df[(df['gave'] == 1) & (df['treatment'] == 1)]['amount']
control_amount = df[(df['gave'] == 1) & (df['control'] == 1)]['amount']

diff = treatment_amount.mean() - control_amount.mean()

t_stat, p_value = stats.ttest_ind(treatment_amount, control_amount)

print("difference in donation amounts between control and treatment: ", diff)
print("t-statistic: ", t_stat)
print("p-value: ", p_value)
```
Now limiting to only the people that donated, it appears that the treatment group donates about 1.66 units less than the control group. This different is not statistically significant though, as the p-value is 0.5615, well above the 0.05 threshold. Therefore, we cannot confidently assert the causal interpretation that people receiving treatment will result in reduced donation amounts. 

```{python, echo = false}
plt.hist(df[(df['gave'] == 1) & (df['treatment'] == 1)]['amount'], bins=20, color='skyblue', edgecolor='black')
plt.axvline(df[(df['gave'] == 1) & (df['treatment'] == 1)]['amount'].mean(), color='red', linestyle='dashed', linewidth=2, label='Mean Donation Amount')
plt.title('Distribution of Donation Amounts Among People Who Donated in Treatment Group')
plt.xlabel('Amount')
plt.ylabel('Frequency')
plt.legend()
plt.show()

#plot histogram of donation amounts for the control group among people who donated
plt.hist(df[(df['gave'] == 1) & (df['control'] == 1)]['amount'], bins=20, color='skyblue', edgecolor='black')
plt.axvline(df[(df['gave'] == 1) & (df['control'] == 1)]['amount'].mean(), color='red', linestyle='dashed', linewidth=2, label='Mean Donation Amount')
plt.title('Distribution of Donation Amounts Among People Who Donated in Control Group')
plt.xlabel('Amount')
plt.ylabel('Frequency')
plt.legend()
plt.show()
```

## Simulation Experiment

As a reminder of how the t-statistic "works," in this section I use simulation to demonstrate the Law of Large Numbers and the Central Limit Theorem.

Suppose the true distribution of respondents who do not get a charitable donation match is Bernoulli with probability p=0.018 that a donation is made. 

Further suppose that the true distribution of respondents who do get a charitable donation match of any size  is Bernoulli with probability p=0.022 that a donation is made.

### Law of Large Numbers

```{python, echo = false}
import numpy as np
treatment_amount = df[df['treatment'] == 1]['amount']
control_amount = df[df['treatment'] == 0]['amount']

true_diff = treatment_amount.mean() - control_amount.mean()
np.random.seed(42)


treatment_draws = np.random.choice(treatment_amount, size=10000, replace=False)
control_draws = np.random.choice(control_amount, size=10000, replace=False)

# Calculate differences
differences = treatment_draws - control_draws

# Calculate cumulative averages of differences
cumulative_averages = np.cumsum(differences) / np.arange(1, len(differences)+1)

# Plotting
plt.figure(figsize=(10, 5))
plt.plot(cumulative_averages, label='Cumulative Average of Differences')
plt.axhline(y=true_diff, color='r', linestyle='--', label='True Difference')
plt.xlabel('Number of Draws')
plt.ylabel('Cumulative Average Difference')
plt.title('Cumulative Average of Differences Between Treatment and Control')
plt.legend()
plt.show()
```
In this plot, the x-axis represents the number of draws, and the y-axis represents the cumulative average of the differences between the treatment and control draws. The red dashed line represents the true difference in means between the treatment and control distributions.

As the number of draws increases, you would expect the cumulative average to approach the true difference in means. This is because, with a larger sample size, the estimate of the difference in means becomes more accurate. If the cumulative average converges to the true difference in means, it indicates that the simulation is correctly capturing the underlying difference between the treatment and control groups.

### Central Limit Theorem


```{python, echo = false}
treatment_amount = df[df['treatment'] == 1]['amount']
control_amount = df[df['treatment'] == 0]['amount']

true_diff =  treatment_amount.mean()-control_amount.mean()

sample_sizes = [50, 200, 500, 1000]
num_simulations = 1000

np.random.seed(42)
for sample_size in sample_sizes:
    sample_diffs = []
    for _ in range(num_simulations):
        simulated_control_draws = np.random.choice(control_amount, sample_size, replace=False)
        simulated_treatment_draws = np.random.choice(treatment_amount, sample_size, replace=False)
        sample_diffs.append(simulated_treatment_draws.mean() - simulated_control_draws.mean())

    plt.hist(sample_diffs, bins=20, color='skyblue', edgecolor='black')
    plt.axvline(x=true_diff, color='red', linestyle='--', label='True Difference in Means')
    plt.xlabel('Sample Difference in Means')
    plt.ylabel('Frequency')
    plt.title(f'Histogram of Sample Differences in Means (Sample Size = {sample_size})')
    plt.legend()
    plt.show()
```
The histograms presented illustrate the Central Limit Theorem in action, highlighting how the distribution of the differences between the sample means increasingly approximates a normal distribution as the sample size grows. Given that zero is positioned near the center of these distributions, it suggests that there is no significant difference between the donation amounts of the treatment and control groups. This central positioning of zero within the distribution indicates that any observed difference is likely due to random sampling variability rather than a true effect of the treatment. Thus, the data provides no substantial evidence to suggest that the treatment influences donation amounts compared to the control.







